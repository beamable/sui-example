//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.SuiFederation.SuiFederation"/> </summary
    public sealed class SuiFederationClient : MicroserviceClient, Beamable.Common.IHaveServiceName, Beamable.Common.ISupportsFederatedLogin<SuiFederationCommon.SuiWeb3Identity>, Beamable.Common.ISupportsFederatedLogin<SuiFederationCommon.SuiWeb3ExternalIdentity>, Beamable.Common.ISupportsFederatedInventory<SuiFederationCommon.SuiWeb3Identity>, Beamable.Common.ISupportsFederatedInventory<SuiFederationCommon.SuiWeb3ExternalIdentity>
    {
        
        public SuiFederationClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "SuiFederation";
            }
        }
        
        /// <summary>
        /// Call the GetRealmAccount method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.GetRealmAccount"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetRealmAccount()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("SuiFederation", "GetRealmAccount", serializedFields);
        }
        
        /// <summary>
        /// Call the GenerateRealmAccount method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.GenerateRealmAccount"/>
        /// </summary>
        public Beamable.Common.Promise<string> GenerateRealmAccount()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("SuiFederation", "GenerateRealmAccount", serializedFields);
        }
        
        /// <summary>
        /// Call the ImportRealmAccount method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.ImportRealmAccount"/>
        /// </summary>
        public Beamable.Common.Promise<string> ImportRealmAccount(string privateKey)
        {
            object raw_privateKey = privateKey;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("privateKey", raw_privateKey);
            return this.Request<string>("SuiFederation", "ImportRealmAccount", serializedFields);
        }
        
        /// <summary>
        /// Call the ImportAccount method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.ImportAccount"/>
        /// </summary>
        public Beamable.Common.Promise<string> ImportAccount(string id, string privateKey)
        {
            object raw_id = id;
            object raw_privateKey = privateKey;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("id", raw_id);
            serializedFields.Add("privateKey", raw_privateKey);
            return this.Request<string>("SuiFederation", "ImportAccount", serializedFields);
        }
        
        /// <summary>
        /// Call the GetAccount method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.GetAccount"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetAccount(string id)
        {
            object raw_id = id;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("id", raw_id);
            return this.Request<string>("SuiFederation", "GetAccount", serializedFields);
        }
        
        /// <summary>
        /// Call the InitializeContentContracts method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.InitializeContentContracts"/>
        /// </summary>
        public Beamable.Common.Promise<string> InitializeContentContracts()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("SuiFederation", "InitializeContentContracts", serializedFields);
        }
        
        /// <summary>
        /// Call the GetSuiEnvironment method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.GetSuiEnvironment"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetSuiEnvironment()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("SuiFederation", "GetSuiEnvironment", serializedFields);
        }
        
        /// <summary>
        /// Call the Withdraw method on the SuiFederation microservice
        /// <see cref="Beamable.SuiFederation.SuiFederation.Withdraw"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Unit> Withdraw(string contentId, long amount)
        {
            object raw_contentId = contentId;
            object raw_amount = amount;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("contentId", raw_contentId);
            serializedFields.Add("amount", raw_amount);
            return this.Request<Beamable.Common.Unit>("SuiFederation", "Withdraw", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersSuiFederationClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForSuiFederationClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<SuiFederationClient>();
        }
        
        public static SuiFederationClient SuiFederation(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<SuiFederationClient>();
        }
    }
}
